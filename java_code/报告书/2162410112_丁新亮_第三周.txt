第一题 P1

Vehicle.java

package P1;

/**
 * 交通工具类
 * 
 * @author codejuzi
 * @CreatedTime 2023年4月04日
 */
public class Vehicle {
    /**
     * 速度
     */
    private double speed;

    /**
     * 行驶距离
     */
    private double dist;

    /**
     * 行驶时间
     */
    private double time;

    /**
     * 驾驶证分数
     */
    private int license = 12;

    public int getLicense() {
        return license;
    }

    public void setLicense(int license) {
        this.license = license;
    }

    public Vehicle(double speed) {
        this.speed = speed;
    }

    /**
     * 加速
     * 
     * @param speed 加速后的速度
     */
    public void speedUp(double speed) {
        this.speed = speed;
    }

    /**
     * 行驶
     * 
     * @param time 行驶时间
     */
    public void drive(double time) {
        this.time = time;
        this.dist += this.time * this.speed;
    }

    /**
     * 显示信息
     */
    public void showInfo() {
        System.out.println("此辆车行驶了" + this.dist + "公里");
    }
}


Bike.java

package P1;

/**
 * 摩托车类
 * 
 * @author codejuzi
 * @CreatedTime 2023年4月11日
 */
public class Bike extends Vehicle {

    /**
     * 最大速度
     */
    private int maxSpeed = 50;

    public Bike(double speed) {
        super(speed);

    }

    @Override
    public void speedUp(double speed) {
        super.speedUp(speed);
        if (speed > maxSpeed) {
            System.out.println("超速！");
            this.setLicense(this.getLicense() - 3);
        }
    }

    @Override
    public void showInfo() {
        super.showInfo();
        System.out.printf("驾驶证剩余分数 License = %d分%n", this.getLicense());
    }
}


Car.java

package P1;

/**
 * 汽车类
 * 
 * @author codejuzi
 * @CreatedTime 2023年4月11日
 */
public class Car extends Vehicle {
    /**
     * 最大速度
     */
    private int maxSpeed = 100;

    public Car(double speed) {
        super(speed);

    }

    @Override
    public void speedUp(double speed) {
        super.speedUp(speed);
        if (speed > maxSpeed) {
            System.out.println("超速！");
            this.setLicense(this.getLicense() - 3);
        }
    }

    @Override
    public void showInfo() {
        super.showInfo();
        System.out.printf("驾驶证剩余分数 License = %d分%n", this.getLicense());
    }
}


Test.java

package P1;

/**
 * 测试类
 * 
 * @author codejuzi
 * @CreatedTime 2023年4月11日
 */
public class Test {

    public static void main(String[] args) {
        testCar();
        testBike();
    }

    public static void testCar() {
        Vehicle car = new Car(60);
        car.drive(10);
        car.speedUp(120);
        car.drive(10);
        car.showInfo();
    }

    public static void testBike() {
        Vehicle bike = new Bike(30);
        bike.drive(10);
        bike.speedUp(60);
        bike.drive(10);
        bike.speedUp(70);
        bike.drive(10);
        bike.showInfo();
    }
}




第二题 P2

MyRectangle.java

package P2;

import java.awt.Rectangle;

/**
 * custom Rectangle
 * 
 * @author codejuzi
 * @CreatedTime 2023年4月11日
 */
public class MyRectangle {

    public static void main(String[] args) {
        // test1();
        test2();
    }

    /**
     * 需求一：生成两个指定坐标、指定宽度的长方形，显示长方形信息。
     */
    public static void test1() {
        int x = 10;
        int y = 10;
        int width = 10;
        int height = 5;
        Rectangle rectangle = new Rectangle(x, y, width, height);
        showInfo(rectangle);
    }

    public static void showInfo(Rectangle rectangle) {
        System.out.printf("长方形的左上角坐标是(%s, %s), 宽度width = %s, 高度height = %s%n",
                rectangle.getX(), rectangle.getY(), rectangle.getWidth(), rectangle.getHeight());
    }

    /**
     * 需求二：返回两个长方形相交形成的长方形，并计算该长方形的面积
     */
    public static void test2() {
        int width1 = 10;
        int height1 = 8;
        // 长方形一
        Rectangle rectangle1 = new Rectangle(width1, height1);
        int x2 = 5;
        int y2 = 6;
        int width2 = 15;
        int height2 = 7;
        // 长方形二
        Rectangle rectangle2 = new Rectangle(x2, y2, width2, height2);

        if (!rectangle1.intersects(rectangle2)) {
            System.out.println("两个长方形没有交集！");
            return;
        }
        // 得到二者相交的长方形
        Rectangle intersection = rectangle1.intersection(rectangle2);
        // 计算面积
        double width = intersection.getWidth();
        double height = intersection.getHeight();
        System.out.printf("长方形面积Size = %s%n", width * height);
    }

}


Square.java

package P2;

import java.awt.Rectangle;

/**
 * 需求三：继承Rectangle，创建Square（正方形），自行修改构造方法，添加可以获取对角线长度的成员方法
 * 
 * @author codejuzi
 * @CreatedTime 2023年4月11日
 */
public class Square extends Rectangle {

    /**
     * 正方形边长
     */
    private int width;

    public Square(int width) {
        super(width, width);
        this.width = width;
    }

    /**
     * 获取对角线长度
     * 
     * @return 对角线长度
     */
    public double getDiagonalLength() {
        return Math.sqrt(width * width * 2);
    }


    public static void main(String[] args) {
        Square square = new Square(10);
        double diagonalLength = square.getDiagonalLength();
        System.out.println("diagonal length = " + diagonalLength);
    }
}

